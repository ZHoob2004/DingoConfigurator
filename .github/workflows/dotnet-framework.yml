name: Build .NET Framework Project

on:
  push:
  pull_request:

jobs:
  build:
    name: Build on Windows
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Extract version and commit hash
      id: version_info
      run: |
        # Get version from AssemblyInfo.cs
        $content = Get-Content "DingoConfigurator/Properties/AssemblyInfo.cs" -Raw
        if ($content -match 'AssemblyVersion\("([\d.]+)"\)') {
          $full_version = $matches[1]
          $commit_hash = "${{ github.sha }}".Substring(0,7)
          
          echo "VERSION=$full_version" >> $env:GITHUB_OUTPUT
          echo "COMMIT_SHORT=$commit_hash" >> $env:GITHUB_OUTPUT
          echo "ARTIFACT_NAME=DingoConfigurator-$full_version-$commit_hash" >> $env:GITHUB_OUTPUT
          Write-Host "Detected version: $full_version"
        } else {
          Write-Error "Could not extract version from AssemblyInfo.cs"
          exit 1
        }

    - name: Update all version metadata
      run: |
        # Ensure all version attributes match (AssemblyVersion, FileVersion, ProductVersion)
        $content = Get-Content "DingoConfigurator/Properties/AssemblyInfo.cs" -Raw
        $newContent = $content -replace 'Assembly(?:Version|FileVersion|ProductVersion)\(".*?"\)', 
          ('Assembly$1Version("${{ steps.version_info.outputs.VERSION }}")')
        $newContent | Set-Content "DingoConfigurator/Properties/AssemblyInfo.cs"
        Write-Host "All version attributes synchronized to ${{ steps.version_info.outputs.VERSION }}"

    - name: Restore NuGet packages
      run: nuget restore DingoConfigurator\DingoConfigurator.sln

    - name: Build solution
      run: msbuild DingoConfigurator\DingoConfigurator.sln -t:rebuild -verbosity:diag -property:Configuration=Release

    - name: Create versioned artifact
      run: |
        $zipName = "${{ steps.version_info.outputs.ARTIFACT_NAME }}.zip"
        Compress-Archive -Path "./DingoConfigurator/bin/Release/*" -DestinationPath "./$zipName"
        Write-Host "Created artifact: $zipName"

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.version_info.outputs.ARTIFACT_NAME }}
        path: ./${{ steps.version_info.outputs.ARTIFACT_NAME }}.zip
