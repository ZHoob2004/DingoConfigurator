<UserControl x:Class="DingoConfigurator.Views.DingoPdmSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:cd="clr-namespace:CanDevices.DingoPdm;assembly=CanDevices"
             xmlns:local="clr-namespace:DingoConfigurator.Views"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="400">
    <UserControl.Resources>
        <ObjectDataProvider x:Key="VarMapEnumDataSource"
                            ObjectType="{x:Type sys:Enum}"
                            MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="cd:VarMap" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="InputModeEnumDataSource"
                            ObjectType="{x:Type sys:Enum}"
                            MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="cd:InputMode" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ConditionalEnumDataSource"
                            ObjectType="{x:Type sys:Enum}"
                            MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="cd:Conditional" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="OperatorEnumDataSource"
                            ObjectType="{x:Type sys:Enum}"
                            MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="cd:Operator" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="WiperModeEnumDataSource"
                            ObjectType="{x:Type sys:Enum}"
                            MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="cd:WiperMode" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="WiperStateEnumDataSource"
                            ObjectType="{x:Type sys:Enum}"
                            MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="cd:WiperState" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="WiperSpeedEnumDataSource"
                            ObjectType="{x:Type sys:Enum}"
                            MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="cd:WiperSpeed" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" MinHeight="50"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" MinHeight="50"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" MinHeight="50"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" MinHeight="50"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" MinHeight="50"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" MinHeight="50"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" MinHeight="50"/>
        </Grid.RowDefinitions>


        <DataGrid AutoGenerateColumns="False"
                  ItemsSource="{Binding Pdm.CanInputs}"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserSortColumns="False"
                  Grid.Row="0"
                  PreviewMouseWheel="DataGrid_PreviewMouseWheel">
            <DataGrid.Columns>
                <DataGridTextColumn Header="CAN Input" Binding="{Binding Number}" IsReadOnly="True" Width="90" MinWidth="90">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Name" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Width="100" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Result" Binding="{Binding Value}" IsReadOnly="True" Width="70" MinWidth="70">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridCheckBoxColumn Header="En" Binding="{Binding Enabled, UpdateSourceTrigger=PropertyChanged}"  Width="40" MinWidth="40">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridTextColumn Header="ID" Binding="{Binding Id, UpdateSourceTrigger=PropertyChanged}"  Width="70" MinWidth="70">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="L Byte" Binding="{Binding LowByte, UpdateSourceTrigger=PropertyChanged}"  Width="70" MinWidth="70">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="H Byte" Binding="{Binding HighByte, UpdateSourceTrigger=PropertyChanged}"  Width="70" MinWidth="70">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridComboBoxColumn Header="Operator" 
                                        ItemsSource="{Binding Source={StaticResource OperatorEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding Operator, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridTextColumn Header="Mask" Binding="{Binding OnVal}"  Width="60" MinWidth="60">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridComboBoxColumn Header="Mode" 
                                        ItemsSource="{Binding Source={StaticResource InputModeEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding Mode, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
            </DataGrid.Columns>
        </DataGrid>

        <GridSplitter     Grid.Row="1"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          Background="White" 
                          ShowsPreview="True"
                          Height="2"/>

        <DataGrid AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserSortColumns="False"
                  ItemsSource="{Binding Pdm.VirtualInputs}"
                  Grid.Row="2"
                  PreviewMouseWheel="DataGrid_PreviewMouseWheel">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Virtual Input" Binding="{Binding Number}" IsReadOnly="True" Width="110" MinWidth="110">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Name" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Width="100" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Result" Binding="{Binding Value}" IsReadOnly="True" Width="70" MinWidth="70">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridCheckBoxColumn Header="En" Binding="{Binding Enabled, UpdateSourceTrigger=PropertyChanged}" Width="40" MinWidth="40">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Header="Not" Binding="{Binding Not0, UpdateSourceTrigger=PropertyChanged}"  Width="50" MinWidth="50">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridComboBoxColumn Header="Variable" 
                                        ItemsSource="{Binding Source={StaticResource VarMapEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding Var0, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Condition" 
                                        ItemsSource="{Binding Source={StaticResource ConditionalEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding Cond0, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridCheckBoxColumn Header="Not" Binding="{Binding Not1, UpdateSourceTrigger=PropertyChanged}"  Width="50" MinWidth="50">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridComboBoxColumn Header="Variable" 
                                        ItemsSource="{Binding Source={StaticResource VarMapEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding Var1, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Condition" 
                                        ItemsSource="{Binding Source={StaticResource ConditionalEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding Cond1, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridCheckBoxColumn Header="Not" Binding="{Binding Not2, UpdateSourceTrigger=PropertyChanged}"  Width="50" MinWidth="50">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridComboBoxColumn Header="Variable" 
                                        ItemsSource="{Binding Source={StaticResource VarMapEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding Var2, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Mode" 
                                        ItemsSource="{Binding Source={StaticResource InputModeEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding Mode, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
            </DataGrid.Columns>
        </DataGrid>

        <GridSplitter     Grid.Row="3"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          Background="White" 
                          ShowsPreview="True"
                          Height="2"/>

        <DataGrid AutoGenerateColumns="False"
                  ItemsSource="{Binding Pdm.Wipers}"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserSortColumns="False"
                  Grid.Row="4">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Header="Wiper" Binding="{Binding Enabled, UpdateSourceTrigger=PropertyChanged}" Width="110" MinWidth="110">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridComboBoxColumn Header="State" 
                                        IsReadOnly="True"
                                        ItemsSource="{Binding Source={StaticResource WiperStateEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding State, Mode=TwoWay}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Speed" 
                                        IsReadOnly="True"
                                        ItemsSource="{Binding Source={StaticResource WiperSpeedEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding Speed, Mode=TwoWay}"
                                        Width="100" MinWidth="100"/>
                <DataGridTemplateColumn Header="Slow" IsReadOnly="True" Width="60" MinWidth="60">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Ellipse Name="StatusEllipse" Height="15" Width="15" Fill="Lime">
                                <Ellipse.Style>
                                    <Style TargetType="{x:Type Ellipse}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SlowState}" Value="True">
                                                <Setter Property="Opacity" Value="1.0"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SlowState}" Value="False">
                                                <Setter Property="Opacity" Value="0.1"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Fast" IsReadOnly="True" Width="60" MinWidth="60">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Ellipse Name="StatusEllipse" Height="15" Width="15" Fill="Lime">
                                <Ellipse.Style>
                                    <Style TargetType="{x:Type Ellipse}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FastState}" Value="True">
                                                <Setter Property="Opacity" Value="1.0"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FastState}" Value="False">
                                                <Setter Property="Opacity" Value="0.1"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridComboBoxColumn Header="Mode" 
                                        ItemsSource="{Binding Source={StaticResource WiperModeEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding Mode, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Slow In" 
                                        ItemsSource="{Binding Source={StaticResource VarMapEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding SlowInput, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Fast In" 
                                        ItemsSource="{Binding Source={StaticResource VarMapEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding FastInput, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Inter In" 
                                        ItemsSource="{Binding Source={StaticResource VarMapEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding InterInput, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="On In" 
                                        ItemsSource="{Binding Source={StaticResource VarMapEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding OnInput, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Speed In" 
                                        ItemsSource="{Binding Source={StaticResource VarMapEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding SpeedInput, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Park In" 
                                        ItemsSource="{Binding Source={StaticResource VarMapEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding ParkInput, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridCheckBoxColumn Header="Park Stop Level" Binding="{Binding ParkStopLevel, UpdateSourceTrigger=PropertyChanged}"  Width="50" MinWidth="50">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridComboBoxColumn Header="Swipe In" 
                                        ItemsSource="{Binding Source={StaticResource VarMapEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding SwipeInput, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Wash In" 
                                        ItemsSource="{Binding Source={StaticResource VarMapEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding WashInput, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridTextColumn Header="Wash/Wipe Cycles" Binding="{Binding WashWipeCycles, UpdateSourceTrigger=PropertyChanged}" Width="100" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        
        <GridSplitter     Grid.Row="5"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          Background="White" 
                          ShowsPreview="True"
                          Height="2"/>
        
        <DataGrid AutoGenerateColumns="False"
                  ItemsSource="{Binding Pdm.Wipers}"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserSortColumns="False"
                  Grid.Row="6">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Wiper Speed Map" IsReadOnly="True" Width="130" MinWidth="130">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridComboBoxColumn Header="Speed 0" 
                                        IsReadOnly="False"
                                        ItemsSource="{Binding Source={StaticResource WiperSpeedEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding SpeedMap[0], Mode=TwoWay}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Speed 1" 
                                        IsReadOnly="False"
                                        ItemsSource="{Binding Source={StaticResource WiperSpeedEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding SpeedMap[1], Mode=TwoWay}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Speed 2" 
                                        IsReadOnly="False"
                                        ItemsSource="{Binding Source={StaticResource WiperSpeedEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding SpeedMap[2], Mode=TwoWay}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Speed 3" 
                                        IsReadOnly="False"
                                        ItemsSource="{Binding Source={StaticResource WiperSpeedEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding SpeedMap[3], Mode=TwoWay}"
                                        Width="100" MinWidth="100"/>    
                <DataGridComboBoxColumn Header="Speed 4" 
                                        IsReadOnly="False"
                                        ItemsSource="{Binding Source={StaticResource WiperSpeedEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding SpeedMap[4], Mode=TwoWay}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Speed 5" 
                                        IsReadOnly="False"
                                        ItemsSource="{Binding Source={StaticResource WiperSpeedEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding SpeedMap[5], Mode=TwoWay}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Speed 6" 
                                        IsReadOnly="False"
                                        ItemsSource="{Binding Source={StaticResource WiperSpeedEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding SpeedMap[6], Mode=TwoWay}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Speed 7" 
                                        IsReadOnly="False"
                                        ItemsSource="{Binding Source={StaticResource WiperSpeedEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding SpeedMap[7], Mode=TwoWay}"
                                        Width="100" MinWidth="100"/>
            </DataGrid.Columns>
        </DataGrid>

        <GridSplitter     Grid.Row="7"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Center"
                  Background="White" 
                  ShowsPreview="True"
                  Height="2"/>

        <DataGrid AutoGenerateColumns="False"
                  ItemsSource="{Binding Pdm.Wipers}"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserSortColumns="False"
                  Grid.Row="8">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Wiper Intermittent Time (ms)" IsReadOnly="True" Width="210" MinWidth="210">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Intermit 1" Binding="{Binding IntermitTime[0]}" IsReadOnly="False" Width="90" MinWidth="90">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Intermit 2" Binding="{Binding IntermitTime[1]}" IsReadOnly="False" Width="90" MinWidth="90">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Intermit 3" Binding="{Binding IntermitTime[2]}" IsReadOnly="False" Width="90" MinWidth="90">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Intermit 4" Binding="{Binding IntermitTime[3]}" IsReadOnly="False" Width="90" MinWidth="90">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Intermit 5" Binding="{Binding IntermitTime[4]}" IsReadOnly="False" Width="90" MinWidth="90">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Intermit 6" Binding="{Binding IntermitTime[5]}" IsReadOnly="False" Width="90" MinWidth="90">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <GridSplitter     Grid.Row="9"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Center"
          Background="White" 
          ShowsPreview="True"
          Height="2"/>
        
        <DataGrid AutoGenerateColumns="False"
                  ItemsSource="{Binding Pdm.Flashers}"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserSortColumns="False"
                  Grid.Row="10">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Flasher" Binding="{Binding Number}" IsReadOnly="True" Width="110" MinWidth="110">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Name" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Width="100" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="Result" IsReadOnly="True" Width="90" MinWidth="90">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Ellipse Name="StatusEllipse" Height="15" Width="15" Fill="Lime">
                                <Ellipse.Style>
                                    <Style TargetType="{x:Type Ellipse}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Value}" Value="True">
                                                <Setter Property="Opacity" Value="1.0"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Value}" Value="False">
                                                <Setter Property="Opacity" Value="0.1"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridCheckBoxColumn Header="En" Binding="{Binding Enabled, UpdateSourceTrigger=PropertyChanged}" Width="40" MinWidth="40">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Header="Single" Binding="{Binding Single, UpdateSourceTrigger=PropertyChanged}" Width="60" MinWidth="60">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridComboBoxColumn Header="Input" 
                                        ItemsSource="{Binding Source={StaticResource VarMapEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding Input, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridComboBoxColumn Header="Output" 
                                        ItemsSource="{Binding Source={StaticResource VarMapEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding Output, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridTextColumn Header="On Time" Binding="{Binding OnTime, UpdateSourceTrigger=PropertyChanged}" Width="70" MinWidth="70">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Off Time" Binding="{Binding OffTime, UpdateSourceTrigger=PropertyChanged}" Width="70" MinWidth="70">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <GridSplitter     Grid.Row="11"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          Background="White" 
                          ShowsPreview="True"
                          Height="2"/>

        <DataGrid AutoGenerateColumns="False"
                  ItemsSource="{Binding Pdm.StarterDisable}"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserSortColumns="False"
                  Grid.Row="12">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Starter Disable" IsReadOnly="True" Width="120" MinWidth="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridCheckBoxColumn Header="En" Binding="{Binding Enabled, UpdateSourceTrigger=PropertyChanged}" Width="40" MinWidth="40">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridComboBoxColumn Header="Input" 
                                        ItemsSource="{Binding Source={StaticResource VarMapEnumDataSource}, Mode=OneWay}" 
                                        SelectedItemBinding="{Binding Input, UpdateSourceTrigger=PropertyChanged}"
                                        Width="100" MinWidth="100"/>
                <DataGridCheckBoxColumn Header="O1" Binding="{Binding Output1, UpdateSourceTrigger=PropertyChanged}" Width="40" MinWidth="40">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Header="O2" Binding="{Binding Output2, UpdateSourceTrigger=PropertyChanged}" Width="40" MinWidth="40">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Header="O3" Binding="{Binding Output3, UpdateSourceTrigger=PropertyChanged}" Width="40" MinWidth="40">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Header="O4" Binding="{Binding Output4, UpdateSourceTrigger=PropertyChanged}" Width="40" MinWidth="40">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Header="O5" Binding="{Binding Output5, UpdateSourceTrigger=PropertyChanged}" Width="40" MinWidth="40">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Header="O6" Binding="{Binding Output6, UpdateSourceTrigger=PropertyChanged}" Width="40" MinWidth="40">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Header="O7" Binding="{Binding Output7, UpdateSourceTrigger=PropertyChanged}" Width="40" MinWidth="40">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Header="O8" Binding="{Binding Output8, UpdateSourceTrigger=PropertyChanged}" Width="40" MinWidth="40">
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style TargetType="CheckBox">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
